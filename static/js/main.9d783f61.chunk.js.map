{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","inputs","NewMovie","state","clearForm","setState","handleChange","changeEvent","inputName","target","name","value","onAdd","this","props","onSubmit","event","preventDefault","inputText","index","keyIndex","htmlFor","id","type","placeholder","onChange","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"+xEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBCtBJK,G,MAAS,CAAC,QAAS,cAAe,SAAU,UAAW,WAEhDC,EAAb,4MACEC,MAAQ,CACNjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,IANZ,EASEI,UAAY,WACV,EAAKC,SAAS,CACZnB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,MAfd,EAmBEM,aAAe,SAACC,GACd,IAAMC,EAAYD,EAAYE,OAAOC,KAErC,EAAKL,SAAL,eACGG,EAAYD,EAAYE,OAAOE,SAvBtC,4CA2BE,WAAU,IAAD,OACCC,EAAUC,KAAKC,MAAfF,MAER,OACE,0BACEtB,UAAU,aACVyB,SAAU,SAACC,GACTA,EAAMC,iBACNL,EAAM,eAAK,EAAKT,QAChB,EAAKC,cAINH,EAAOJ,KAAI,SAACqB,EAAWC,GACtB,IAAMC,EAAWD,EAEjB,OACE,yBAAKpB,IAAKmB,EAAYE,EAAU9B,UAAU,kBACxC,2BAAO+B,QAASH,GACbA,EADH,IAGE,6BACA,2BACEI,GAAIJ,EACJR,KAAMQ,EACNK,KAAK,OACLZ,MAAO,EAAKR,MAAMe,GAClBM,YAAaN,EACbO,SAAU,EAAKnB,oBAMzB,4BAAQiB,KAAK,SAASjC,UAAU,OAAhC,kBA7DR,GAA8BoC,a,OCAjBC,EAAb,4MACExB,MAAQ,CACNP,OAAQgC,GAFZ,EAKEC,SAAW,SAAC/B,GACV,EAAKO,UAAS,SAAAyB,GAAS,MAAK,CAC1BlC,OAAO,GAAD,mBACDkC,EAAUlC,QADT,CAEJE,SATR,4CAcE,WAAU,IACAF,EAAWiB,KAAKV,MAAhBP,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CAAUsB,MAAOC,KAAKgB,iBAvBhC,GAAyBH,aCDzBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9d783f61.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nconst inputs = ['title', 'description', 'imgUrl', 'imdbUrl', 'imdbId'];\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  clearForm = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  handleChange = (changeEvent) => {\n    const inputName = changeEvent.target.name;\n\n    this.setState({\n      [inputName]: changeEvent.target.value,\n    });\n  }\n\n  render() {\n    const { onAdd } = this.props;\n\n    return (\n      <form\n        className=\"film-adder\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          onAdd({ ...this.state });\n          this.clearForm();\n        }\n      }\n      >\n        {inputs.map((inputText, index) => {\n          const keyIndex = index;\n\n          return (\n            <div key={inputText + keyIndex} className=\"form-container\">\n              <label htmlFor={inputText}>\n                {inputText}\n                :\n                <br />\n                <input\n                  id={inputText}\n                  name={inputText}\n                  type=\"text\"\n                  value={this.state[inputText]}\n                  placeholder={inputText}\n                  onChange={this.handleChange}\n                />\n              </label>\n            </div>\n          );\n        })}\n        <button type=\"submit\" className=\"sub\">add movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}